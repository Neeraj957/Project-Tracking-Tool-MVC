// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project_Tracking_Tool_MVC.Data;

#nullable disable

namespace Project_Tracking_Tool_MVC.Migrations
{
    [DbContext(typeof(ProjectTrackingToolDbContext))]
    [Migration("20240110173217_added Project and Task tables in this migration, update column in Project Entity")]
    partial class addedProjectandTasktablesinthismigrationupdatecolumninProjectEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project_Tracking_Tool_MVC.Models.DomainModel.Project", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ProjectCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Project_Tracking_Tool_MVC.Models.DomainModel.Task", b =>
                {
                    b.Property<Guid>("taskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("taskDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("taskId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("taskName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("taskStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("taskId");

                    b.HasIndex("taskId1");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Project_Tracking_Tool_MVC.Models.DomainModel.Task", b =>
                {
                    b.HasOne("Project_Tracking_Tool_MVC.Models.DomainModel.Task", null)
                        .WithMany("Tasks")
                        .HasForeignKey("taskId1");
                });

            modelBuilder.Entity("Project_Tracking_Tool_MVC.Models.DomainModel.Task", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
